# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
name: R-01.00$(rev:.r)
trigger:
- master

variables:
  GIT_URI: 'git@ssh.dev.azure.com:v3/healthcare-arxix/AR%20XIX/ic_batch'

stages:
- stage: 'Build'
  displayName: 'Build application'
  jobs: 
  - job: 'Build'
    displayName: 'Build job'
    pool:
     vmImage: 'AR-Linux-Server-Ag'
    steps:
     - bash: |
        repo_name="`echo $(Build.Repository.Name) | sed 's/ /_/g'`"
        echo "##vso[task.setvariable variable=my_repo_name]$repo_name"
       displayName: 'Create Custom Variables'

     - task: Bash@3
       displayName: 'Compile/Build everything'
       inputs:
         targetType: filePath
         filePath: './/hhsct/utils/job/devops_ci_build_1.sh'
         arguments: '-b $(Build.SourceBranchName) -f $(Build.SourceBranch) -r "$(my_repo_name)" -g $(GIT_URI)'
     - task: Bash@3
       displayName: 'Zip up the artifacts'
       inputs:
         targetType: filePath
         filePath: './/hhsct/utils/job/devops_ci_build_2.sh'
         arguments: '-b $(Build.SourceBranchName) -r "$(my_repo_name)"'
     - task: CopyFiles@2
       displayName: 'Stage the artifacts'
       inputs:
         SourceFolder: '/hhsct/devops/build_$(my_repo_name)_$(Build.SourceBranchName)'
         Contents: '*.gz'
         TargetFolder: '$(Build.ArtifactStagingDirectory)'
     - task: PublishBuildArtifacts@1
       displayName: 'Publish Artifact: drop'

     - bash: |
        # Run the report into this log file
        /hhsct/utils/job/devops_ci_build_report.sh ${MY_REPO_NAME} $(Build.SourceBranchName) ARXIX
   
        # Get the repo and then create the markdown file so we can check it into the stats repo
        cd /tmp
        bld_dir=BuildOverview.$$
        /bin/rm -rf  $bld_dir
        git clone git@ssh.dev.azure.com:v3/healthcare-arxix/AR%20XIX/BuildOverview $bld_dir
   
        cd $bld_dir
        /hhsct/utils/job/devops_ci_build_report.sh ${MY_REPO_NAME} $(Build.SourceBranchName) ARXIX >LinuxBuildStats.md
   
        git add LinuxBuildStats.md
        git stage LinuxBuildStats.md
        git commit -a -m "Stats Update"
        git push 
   
        cd ..
        #/bin/rm -rf $bld_dir
       displayName: 'Create Custom Variables'

- stage: 'Dev'
  displayName: 'Deploy Dev'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'vs2017-win2016'
    environment: dev
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
         # - download: current
         #   artifact: drop
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                # Write your PowerShell commands here.
                Write-Host "Dev environment"
- stage: 'MO'
  displayName: 'Deploy SIT (MO)'
  dependsOn: Dev
  condition: succeeded()
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'vs2017-win2016'
    environment: SIT (MO)
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
         # - download: current
         #   artifact: drop
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                # Write your PowerShell commands here.
                Write-Host "SIT (MO) environment"
- stage: 'UAT'
  displayName: 'Deploy UAT '
  dependsOn: MO
  condition: succeeded()
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'vs2017-win2016'
    environment: uat
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                # Write your PowerShell commands here.
                Write-Host "Uat environment"
- stage: 'Prod'
  displayName: 'Deploy PROD'
  dependsOn: UAT
  condition: succeeded()
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'vs2017-win2016'
    environment: prod
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                # Write your PowerShell commands here.
                Write-Host "Prod environment"